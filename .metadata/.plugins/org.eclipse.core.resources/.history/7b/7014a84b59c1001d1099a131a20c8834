package DAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import Beans.Customer;


public class CustomerDAO {
    
    private String url ="";
    private String mySQLUser = "";
    private String mySQLPass = "";
    
    public CustomerDAO(String url, String user, String password) 
    {
    	this.url = url;
    	this.mySQLUser = user;
    	this.mySQLPass = password;
    }
    
    public void addCustomer(Customer customer)  {
    	Connection connection;
		try {
			connection = DriverManager.getConnection(url, mySQLUser, mySQLPass);
			String query = "INSERT INTO customer (customer_name, username, password, email) VALUES (?, ?, ?, ?)";
	        PreparedStatement statement = connection.prepareStatement(query);
	        statement.setString(1, customer.getCustomerName());
	        statement.setString(2, customer.getUsername());
	        statement.setString(3, customer.getPassword());
	        statement.setString(4, customer.getEmail());
	        statement.executeUpdate();
	        statement.close();
	        connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
       
    }
    
    public void deleteCustomer(int customerId) {
    	
    	Connection connection;
		try {
			connection = DriverManager.getConnection(url, mySQLUser, mySQLPass);
		 	tring query = "DELETE FROM customer WHERE id = ?";
	        PreparedStatement statement = connection.prepareStatement(query);
	        statement.setInt(1, customerId);
	        statement.executeUpdate();
	        statement.close();
	        connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
       
    }
    
    public void updateCustomer(Customer customer) {
    
    	Connection connection;
		try {
			connection = DriverManager.getConnection(url, mySQLUser, mySQLPass);
			String query = "UPDATE customer SET customer_name=?, username=?, password=?, email=? WHERE id=?";
	        PreparedStatement statement = connection.prepareStatement(query);
	        statement.setString(1, customer.getCustomerName());
	        statement.setString(2, customer.getUsername());
	        statement.setString(3, customer.getPassword());
	        statement.setString(4, customer.getEmail());
	        statement.setInt(5, customer.getId());
	        statement.executeUpdate();
	        statement.close();
	        connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    public Customer getCustomerById(int customerId) {
    	Connection connection;
		try {
			connection = DriverManager.getConnection(url, mySQLUser, mySQLPass);
			String query = "SELECT * FROM customer WHERE id = ?";
	        PreparedStatement statement = connection.prepareStatement(query);
	        statement.setInt(1, customerId);
	        ResultSet resultSet = statement.executeQuery();
	        Customer customer = null;
	        if(resultSet.next()) {
	            customer = new Customer();
	            customer.setId(resultSet.getInt("id"));
	            customer.setCustomerName(resultSet.getString("customer_name"));
	            customer.setUsername(resultSet.getString("username"));
	            customer.setPassword(resultSet.getString("password"));
	            customer.setEmail(resultSet.getString("email"));
	        }
	        resultSet.close();
	        statement.close();
	        connection.close();
	        return customer;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
    }
    
    public List<Customer> getAllCustomers() throws SQLException {
    	Connection connection = DriverManager.getConnection(url, mySQLUser, mySQLPass);
        String query = "SELECT * FROM customer";
        PreparedStatement statement = connection.prepareStatement(query);
        ResultSet resultSet = statement.executeQuery();
        List<Customer> customers = new ArrayList<>();
        while(resultSet.next()) {
            Customer customer = new Customer();
            customer.setId(resultSet.getInt("id"));
            customer.setCustomerName(resultSet.getString("customer_name"));
            customer.setUsername(resultSet.getString("username"));
            customer.setPassword(resultSet.getString("password"));
            customer.setEmail(resultSet.getString("email"));
            customers.add(customer);
        }
        resultSet.close();
        statement.close();
        connection.close();
        return customers;
    }
    
}
